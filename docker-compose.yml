---

# Optional dependencies.
# Application should work without them under default configuration.

services:

  # --- databases ---

  pgsql:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: go42
    ports:
      - "5432:5432"

  mysql:
    image: mysql:latest
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      MYSQL_USER: user
      MYSQL_PASSWORD: qwerty
      MYSQL_DATABASE: go42
    ports:
      - "3306:3306"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  memcached:
    image: memcached:latest
    ports:
      - "11211:11211"

  aerospike:
    image: aerospike:ce-8.0.0.8
    configs:
      - source: aerospike_cfg
        target: /opt/aerospike/etc/aerospike.conf
        mode: 0644
    command: ["--config-file", "/opt/aerospike/etc/aerospike.conf"]
    ports:
      - "3000:3000"

  # --- event buses ---

  nats:
    image: nats:2
    command: ["-js", "-m", "8222"]
    ports:
      - "4222:4222"
      - "8222:8222" # ui

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672" # ui

  kafka:
    image: apache/kafka:4.0.0
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: INTERNAL://:1001,EXTERNAL://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:1001,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    ports:
      - "9092:9092"

  # --- configuration managements ---

  vault:
    image: vault:1.13.3
    command: server -dev
    cap_add:
      - IPC_LOCK
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=qwerty
    ports:
      - "8200:8200" # ui

  etcd:
    image: bitnami/etcd:latest
    environment:
      - ETCD_LOG_LEVEL=debug
      - ALLOW_NONE_AUTHENTICATION=yes
    ports:
      - "2379:2379"
      - "2380:2380"

  # --- observability ---

  prometheus:
    image: prom/prometheus:latest
    configs:
      - source: prometheus_cfg
        target: /etc/prometheus/prometheus.yml
        mode: 0644
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090" # ui

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=qwerty
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3333:3000" # ui

  zipkin:
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411" # ui

# ---

# @note host.docker.internal is available only with docker desktop on macos and windows.
# @note 172.17.0.1 is default bridge to host machine on linux.

configs:
  prometheus_cfg:
    content: |
      global:
        scrape_interval: 2s
      scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']
        - job_name: 'service'
          static_configs:
            - targets: ['host.docker.internal:8080', '172.17.0.1:8080']
  aerospike_cfg:
    content: |
      service {
        cluster-name go42-cluster
      }
      logging {
        console {
          context any info
        }
      }
      network {
        service {
          address any
          port 3000
        }
        heartbeat {
          mode multicast
          multicast-group 239.1.99.222
          port 9918
          interval 150
          timeout 10
        }
        fabric {
          port 3001
        }
        info {
          port 3003
        }
      }
      namespace go42 {
        replication-factor 1
        default-ttl 10
        nsup-period 10
        storage-engine memory {
          data-size 256M
        }
      }

networks:
  default:
    driver: bridge
    name: "go42_network"
