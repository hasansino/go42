// Code generated by MockGen. DO NOT EDIT.
// Source: adapter.go
//
// Generated by this command:
//
//	mockgen -source adapter.go -package mocks -destination mocks/mocks.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/hasansino/go42/internal/auth/models"
	gomock "go.uber.org/mock/gomock"
)

// MockserviceAccessor is a mock of serviceAccessor interface.
type MockserviceAccessor struct {
	ctrl     *gomock.Controller
	recorder *MockserviceAccessorMockRecorder
	isgomock struct{}
}

// MockserviceAccessorMockRecorder is the mock recorder for MockserviceAccessor.
type MockserviceAccessorMockRecorder struct {
	mock *MockserviceAccessor
}

// NewMockserviceAccessor creates a new mock instance.
func NewMockserviceAccessor(ctrl *gomock.Controller) *MockserviceAccessor {
	mock := &MockserviceAccessor{ctrl: ctrl}
	mock.recorder = &MockserviceAccessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockserviceAccessor) EXPECT() *MockserviceAccessorMockRecorder {
	return m.recorder
}

// GetUserByUUID mocks base method.
func (m *MockserviceAccessor) GetUserByUUID(ctx context.Context, uuid string) (*models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserByUUID", ctx, uuid)
	ret0, _ := ret[0].(*models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserByUUID indicates an expected call of GetUserByUUID.
func (mr *MockserviceAccessorMockRecorder) GetUserByUUID(ctx, uuid any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserByUUID", reflect.TypeOf((*MockserviceAccessor)(nil).GetUserByUUID), ctx, uuid)
}
