// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go
//
// Generated by this command:
//
//	mockgen -source repository.go -package mocks -destination mocks/accessors.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MocksqlCoreAccessor is a mock of sqlCoreAccessor interface.
type MocksqlCoreAccessor struct {
	ctrl     *gomock.Controller
	recorder *MocksqlCoreAccessorMockRecorder
	isgomock struct{}
}

// MocksqlCoreAccessorMockRecorder is the mock recorder for MocksqlCoreAccessor.
type MocksqlCoreAccessorMockRecorder struct {
	mock *MocksqlCoreAccessor
}

// NewMocksqlCoreAccessor creates a new mock instance.
func NewMocksqlCoreAccessor(ctrl *gomock.Controller) *MocksqlCoreAccessor {
	mock := &MocksqlCoreAccessor{ctrl: ctrl}
	mock.recorder = &MocksqlCoreAccessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocksqlCoreAccessor) EXPECT() *MocksqlCoreAccessorMockRecorder {
	return m.recorder
}

// IsDuplicateKeyError mocks base method.
func (m *MocksqlCoreAccessor) IsDuplicateKeyError(err error) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsDuplicateKeyError", err)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsDuplicateKeyError indicates an expected call of IsDuplicateKeyError.
func (mr *MocksqlCoreAccessorMockRecorder) IsDuplicateKeyError(err any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsDuplicateKeyError", reflect.TypeOf((*MocksqlCoreAccessor)(nil).IsDuplicateKeyError), err)
}

// IsNotFoundError mocks base method.
func (m *MocksqlCoreAccessor) IsNotFoundError(err error) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsNotFoundError", err)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsNotFoundError indicates an expected call of IsNotFoundError.
func (mr *MocksqlCoreAccessorMockRecorder) IsNotFoundError(err any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsNotFoundError", reflect.TypeOf((*MocksqlCoreAccessor)(nil).IsNotFoundError), err)
}
