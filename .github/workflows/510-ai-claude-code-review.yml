name: Claude Code Review

# Automated code review using Claude AI for pull requests.

on:
  pull_request:
    types: [opened, synchronize]

concurrency:
  group: claude-review-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:
  prepare-env:
    if: |
      vars.AI_ENABLE != 'false' &&
      vars.CLAUDE_ENABLE != 'false' &&
      vars.CLAUDE_AUTO_REVIEW != 'false' &&
      contains(fromJSON('["OWNER", "MEMBER", "COLLABORATOR"]'), github.event.pull_request.author_association)
    uses: ./.github/workflows/500-ai-prepare-env.yaml

  claude-review:
    needs: prepare-env
    if: |
      vars.AI_ENABLE != 'false' &&
      vars.CLAUDE_ENABLE != 'false' &&
      vars.CLAUDE_AUTO_REVIEW != 'false' &&
      contains(fromJSON('["OWNER", "MEMBER", "COLLABORATOR"]'), github.event.pull_request.author_association)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          use_sticky_comment: true
          model: "claude-opus-4-1-20250805"
          mcp_config: |
            {
              "mcpServers": {
                "kwb": {
                  "command": "go",
                  "args": ["run", "cmd/genkwb/main.go", "-serve", "-index", "ai/index"],
                  "env": {}
                }
              }
            }
          allowed_tools: |
            Bash(go mod tidy*)
            Bash(go mod verify*)
            Bash(go vet*)
            Bash(go test*)
            Bash(make generate*)
            Bash(make lint*)
            Bash(make test-unit*)
            Bash(golangci-lint*)
            Bash(buf lint*)
            Bash(gitleaks*)
            Bash(actionlint*)
            mcp__kwb__search
            mcp__kwb__list_files
            mcp__kwb__get_file
