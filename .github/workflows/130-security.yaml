name: security

# Vulnerability / data leak detection.
# @see https://github.com/gitleaks/gitleaks
# @see https://github.com/securego/gosec
# @see https://pkg.go.dev/golang.org/x/vuln/cmd/govulncheck
# @see https://github.com/sonatype-nexus-community/nancy
# @see https://codeql.github.com/
# @see https://github.com/google/go-licenses

on:
  workflow_dispatch:
    inputs:
      runs_on:
        required: true
        type: string
        default: ubuntu-latest
        description: "runs_on"
      continue_on_error:
        required: true
        type: boolean
        default: false
        description: "continue_on_error"
  workflow_call:
    inputs:
      runs_on:
        required: true
        type: string
        default: ubuntu-latest
      continue_on_error:
        required: true
        type: boolean
        default: false

# Remove global permissions
permissions: {}

jobs:
  gitleaks:
    name: gitleaks
    runs-on: ${{ inputs.runs_on }}
    continue-on-error: ${{ inputs.continue_on_error }}
    permissions:
      contents: read
    # ---
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: false

  gosec:
    name: gosec
    runs-on: ${{ inputs.runs_on }}
    continue-on-error: ${{ inputs.continue_on_error }}
    permissions:
      contents: read
      security-events: write
    env:
      GO111MODULE: on
    # ---
    steps:
      - uses: actions/checkout@v4
      - uses: securego/gosec@master
        with:
          args: -exclude-generated ./...

  govulncheck:
    name: govulncheck
    runs-on: ${{ inputs.runs_on }}
    continue-on-error: ${{ inputs.continue_on_error }}
    permissions:
      contents: read
    # ---
    steps:
      - uses: actions/checkout@v4
      - run: echo "go_version=$(grep '^go ' go.mod | awk '{print $2}')" >> $GITHUB_ENV
#      - uses: actions/cache@v4
#        with:
#          path: |
#            ~/go/pkg/mod
#            ~/.cache/go-build
#          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#          restore-keys: |
#            ${{ runner.os }}-go-
      - uses: golang/govulncheck-action@v1
        with:
          repo-checkout: false
          go-version-input: ${{ env.go_version }}

  nancy:
    name: nancy
    runs-on: ${{ inputs.runs_on }}
    continue-on-error: ${{ inputs.continue_on_error }}
    permissions:
      contents: read
    # ---
    steps:
      - uses: actions/checkout@v4
      # ---
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
#      - uses: actions/cache@v4
#        with:
#          path: |
#            ~/go/pkg/mod
#            ~/.cache/go-build
#          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#          restore-keys: |
#            ${{ runner.os }}-go-
      - run: go list -json -m all > go.list
      - uses: sonatype-nexus-community/nancy-github-action@main

  codeql:
    name: codeql
    runs-on: ${{ inputs.runs_on }}
    continue-on-error: ${{ inputs.continue_on_error }}
    permissions:
      contents: read
      security-events: write
      actions: read
    # ---
    steps:
      - uses: actions/checkout@v4
      # ---
      - uses: github/codeql-action/init@v3
        with:
          languages: go
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3

  licenses:
    name: licenses
    runs-on: ${{ inputs.runs_on }}
    continue-on-error: ${{ inputs.continue_on_error }}
    permissions:
      contents: read
    # ---
    steps:
      - uses: actions/checkout@v4
      - uses: joeig/go-licenses-action@v1.1
        with:
          # some packages may miss license files, or they are linked to outside libraries
          # for stricter checks, add `unknown` to this list
          disallowed-types: "forbidden,restricted"

  scorecard:
    name: scorecard
    runs-on: ubuntu-latest  # MUST be hardcoded for OSSF scorecards
    continue-on-error: ${{ inputs.continue_on_error }}
    permissions:
      contents: read
      id-token: write
      security-events: write
    # ---
    steps:
      - uses: actions/checkout@v4
      - uses: ossf/scorecard-action@v2.4.2
        with:
          results_file: scorecard-results.sarif
          results_format: sarif
          publish_results: true
      - uses: actions/upload-artifact@v4
        with:
          name: scorecard-results
          path: scorecard-results.sarif
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: scorecard-results.sarif

  capslock:
    name: capslock
    runs-on: ${{ inputs.runs_on }}
    continue-on-error: ${{ inputs.continue_on_error }}
    permissions:
      contents: read
    # ---
    steps:
      - uses: actions/checkout@v4
      # ---
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
#      - uses: actions/cache@v4
#        with:
#          path: |
#            ~/go/pkg/mod
#            ~/.cache/go-build
#          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#          restore-keys: |
#            ${{ runner.os }}-go-
      - run: go install github.com/google/capslock/cmd/capslock@latest
      - run: capslock -packages ./... -output=json > capslock-report.json
      - uses: actions/upload-artifact@v4
        with:
          name: capslock-report
          path: capslock-report.json
