name: docker-build

on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string

jobs:
  docker-build:
    name: docker-build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - run: echo "commit_hash=$(grep git rev-parse HEAD 2>/dev/null || echo '')" >> $GITHUB_ENV
      - run: echo "release_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo '')" >> $GITHUB_ENV

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: echo "go_version=$(grep '^go ' go.mod | awk '{print $2}')" >> $GITHUB_ENV

      - uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/
          file: ${{ github.workspace }}/Dockerfile
          platforms: linux/amd64, linux/arm64
          no-cache: true
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/goapp:${{ inputs.image_tag }}
          build-args: |
            GO_VERSION=${{ env.go_version }}
            COMMIT_HASH=${{ env.commit_hash }}
            RELEASE_TAG=${{ env.release_tag }}

  docker-vuln-check:
    needs: docker-build
    runs-on: ubuntu-latest
    permissions:
      packages: read
    steps:
      - uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/goapp:${{ inputs.image_tag }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'