name: docker-build

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'tag'
        required: true
        default: ''
      latest_tag:
        description: 'latest'
        required: true
        default: false
        type: boolean

jobs:
  docker-build:
    name: docker-build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "go_version=$(grep '^go ' go.mod | awk '{print $2}')" >> $GITHUB_ENV
      - uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/
          file: ${{ github.workspace }}/Dockerfile
          platforms: linux/amd64, linux/arm64
          no-cache: true
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/goapp:${{ github.event.inputs.image_tag }}
            ${{ github.event.inputs.image_tag != 'latest' && github.event.inputs.latest_tag && format('ghcr.io/{0}/goapp:latest', github.repository_owner) || '' }}
          build-args: |
            GO_VERSION=${{ env.go_version }}
  docker-vuln-check:
    runs-on: ubuntu-latest
    permissions:
      packages: read
    steps:
      - uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/goapp:${{ github.event.inputs.image_tag }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'