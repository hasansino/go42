name: integration-tests

# Integrations tests.
# Runs application, dependencies if necessary, and executes tests marked as integration tests.

on:
  workflow_dispatch:
    inputs:
      runs_on:
        required: true
        type: string
        default: ubuntu-latest
        description: "runs_on"
      continue_on_error:
        required: true
        type: boolean
        default: false
        description: "continue_on_error"
      service_name:
        required: true
        type: string
        default: "go42"
        description: "service_name"
      image_tag:
        required: true
        type: string
        default: "tmp"
        description: "image_tag"
  workflow_call:
    inputs:
      runs_on:
        required: true
        type: string
      continue_on_error:
        required: true
        type: boolean
      service_name:
        required: true
        type: string
      image_tag:
        required: true
        type: string

permissions: {}

jobs:
  integration-tests:
    name: integration-tests-${{ matrix.database }}
    runs-on: ${{ inputs.runs_on }}
    continue-on-error: ${{ inputs.continue_on_error }}
    permissions:
      contents: read
      packages: read
    strategy:
      matrix:
        database: [sqlite, mysql, pgsql]
        include:
          - database: sqlite
            database_engine: sqlite
            app_port: 44442
            grpc_port: 55552
          - database: mysql
            database_engine: mysql
            app_port: 44443
            grpc_port: 55553
          - database: pgsql
            database_engine: pgsql
            app_port: 44444
            grpc_port: 55554
    # ---
    services:
      mysql:
        image: ${{ matrix.database == 'mysql' && 'mysql:latest' || '' }}
        ports:
          - 3306:3306
        env:
          MYSQL_USER: user
          MYSQL_PASSWORD: qwerty
          MYSQL_DATABASE: go42
          MYSQL_ROOT_PASSWORD: root
        options: >-
          --health-cmd "mysql -h localhost -u user -pqwerty -D go42 -e 'SELECT 1' || exit 1"
          --health-start-period 30s
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
      pgsql:
        image: ${{ matrix.database == 'pgsql' && 'postgres:latest' || '' }}
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: qwerty
          POSTGRES_DB: go42
        options: >-
          --health-cmd "PGPASSWORD=qwerty psql -h localhost -U user -d go42 -c 'SELECT 1' || exit 1"
          --health-start-period 10s
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
      app:
        image: ghcr.io/${{ github.repository_owner }}/${{ inputs.service_name }}:${{ inputs.image_tag }}
        ports:
          - ${{ matrix.app_port }}:8080  # unique ports to avoid conflicts on self-hosted runners
          - ${{ matrix.grpc_port }}:50051 # unique ports to avoid conflicts on self-hosted runners
        # environment variables read by service against which integration tests are run
        env:
          LOG_LEVEL: warn
          ENVIRONMENT: ci-integration-tests
          SERVER_HTTP_LISTEN: :8080
          SERVER_GRPC_LISTEN: :50051
          SERVER_GRPC_AUTHORIZATION_ENABLED: false
          DATABASE_ENGINE: ${{ matrix.database_engine }}
          DATABASE_MYSQL_MASTER_HOST: mysql
          DATABASE_MYSQL_SLAVE_HOST: mysql
          DATABASE_PGSQL_MASTER_HOST: pgsql
          DATABASE_PGSQL_SLAVE_HOST: pgsql
        options: >-
          --health-cmd "curl -f http://localhost:8080/health || exit 1"
          --health-start-period 1s
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10
    # ---
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - run: go mod download
      - run: go test -count=1 -v -race ./tests/integration/...
        # environment variables read by integration tests
        env:
          CGO_ENABLED: 1 # needed for -race
          HTTP_SERVER_ADDRESS: http://localhost:${{ matrix.app_port }}
          GRPC_SERVER_ADDRESS: localhost:${{ matrix.grpc_port }}
