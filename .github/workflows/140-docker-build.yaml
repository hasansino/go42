name: docker-build

# Service packaging.
# Builds Dockerfile, which in turn builds golang binary.
# buildx allows building multi-arch images.
# Pushes image to ghcr.io.
#
# @note should be executed only with single platform at a time for cache to work properly.

on:
  workflow_dispatch:
    inputs:
      runs_on:
        required: true
        type: string
        default: ubuntu-latest
      continue_on_error:
        required: true
        type: boolean
        default: false
      service_name:
        required: true
        type: string
        default: "go42"
      image_tag:
        required: true
        type: string
        default: "tmp"
      platforms:
        required: true
        type: string
        default: "linux/amd64"
      attestation:
        required: true
        type: boolean
        default: false
      attestation_sbom:
        required: true
        type: boolean
        default: false
  workflow_call:
    inputs:
      runs_on:
        required: true
        type: string
        default: ubuntu-latest
      continue_on_error:
        required: true
        type: boolean
        default: false
      service_name:
        required: true
        type: string
      image_tag:
        required: true
        type: string
      platforms:
        required: true
        type: string
      attestation:
        required: true
        type: boolean
      attestation_sbom:
        required: true
        type: boolean

permissions:
  packages: write
  contents: write
  attestations: write
  id-token: write
  actions: read

jobs:
  docker-build:
    name: docker-build
    runs-on: ${{ inputs.runs_on }}
    continue-on-error: ${{ inputs.continue_on_error }}
    # ---
    steps:
      - uses: actions/checkout@v4
      # ---
      - run: echo "go_version=$(grep '^go ' go.mod | awk '{print $2}')" >> $GITHUB_ENV
      - run: echo "commit_hash=$(git rev-parse HEAD 2>/dev/null || echo '')" >> $GITHUB_ENV
      - run: echo "release_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo '')" >> $GITHUB_ENV
      # ---
      - uses: docker/setup-buildx-action@v3
        with:
          cache-binary: true
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # ---
      - uses: docker/build-push-action@v6
        id: build
        with:
          context: ${{ github.workspace }}/
          file: ${{ github.workspace }}/Dockerfile
          platforms: ${{ inputs.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ inputs.service_name }}:${{ inputs.image_tag }}
          build-args: |
            GO_VERSION=${{ env.go_version }}
            COMMIT_HASH=${{ env.commit_hash }}
            RELEASE_TAG=${{ env.release_tag }}
      # ---
      - uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ github.repository_owner }}/${{ inputs.service_name }}:${{ inputs.image_tag }}
          format: spdx-json
          output-file: docker-image-sbom.json
          dependency-snapshot: true
      # ---
      - if: ${{ inputs.attestation }}
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/${{ inputs.service_name }}:${{ inputs.image_tag }}
          subject-digest: ${{ steps.build.outputs.digest }}
      - if: ${{ inputs.attestation_sbom }}
        uses: actions/attest-sbom@v2
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/${{ inputs.service_name }}:${{ inputs.image_tag }}
          subject-digest: ${{ steps.build.outputs.digest }}
          sbom-path: docker-image-sbom.json
          push-to-registry: true
