name: security-extra

# Vulnerability scan of final artifacts.
# @see https://trivy.dev/latest/
# @see https://www.zaproxy.org/
# @see https://github.com/google/osv-scanner

on:
  workflow_dispatch:
    inputs:
      runs_on:
        required: true
        type: string
        default: ubuntu-latest
        description: "runs_on"
      continue_on_error:
        required: true
        type: boolean
        default: false
        description: "continue_on_error"
      service_name:
        required: true
        type: string
        default: "go42"
        description: "service_name"
      image_tag:
        required: true
        type: string
        default: "tmp"
        description: "image_tag"
  workflow_call:
    inputs:
      runs_on:
        required: true
        type: string
      continue_on_error:
        required: true
        type: boolean
      service_name:
        required: true
        type: string
      image_tag:
        required: true
        type: string

permissions: {}

jobs:
  trivy:
    name: trivy
    runs-on: ${{ inputs.runs_on }}
    continue-on-error: ${{ inputs.continue_on_error }}
    permissions:
      contents: read
      packages: read
    # ----
    steps:
      - name: 'Run Trivy vulnerability scanner'
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/${{ inputs.service_name }}:${{ inputs.image_tag }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  zap-api-scan:
    name: zap-api-scan
    runs-on: ${{ inputs.runs_on }}
    continue-on-error: ${{ inputs.continue_on_error }}
    permissions:
      contents: read
      packages: read
    # ----
    services:
      app:
        image: ghcr.io/${{ github.repository_owner }}/${{ inputs.service_name }}:${{ inputs.image_tag }}
        ports:
          - 44441:8080 # should be unique to avoid conflicts on self-hosted runners
        env:
          LOG_LEVEL: warn
          ENVIRONMENT: ci-security-tests
          SERVER_HTTP_LISTEN: :8080
        options: >-
          --health-cmd "curl -f http://localhost:8080/health || exit 1"
          --health-start-period 1s
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10
    # ----
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v5
      # ----
      - name: 'Run ZAP API scan'
        uses: zaproxy/action-api-scan@v0.9.0
        with:
          target: 'http://localhost:44441/api/v1/.combined.yml'
          format: openapi
          allow_issue_writing: false

  osv-scanner:
    name: osv-scanner
    runs-on: ${{ inputs.runs_on }}
    continue-on-error: ${{ inputs.continue_on_error }}
    permissions:
      contents: read
      packages: read
      actions: read
      security-events: write
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v5
      - name: 'Download SBOM artifact'
        uses: actions/download-artifact@v4
        with:
          # @see https://google.github.io/osv-scanner/usage/scan-source#sbom-scanning
          name: sbom-${{ inputs.service_name }}-${{ inputs.image_tag }}.spdx.json
      - name: 'Run OSV Scanner'
        uses: google/osv-scanner-action/osv-scanner-action@v2.1.0
        continue-on-error: true
        with:
          scan-args: --output=results.json --all-vulns --format=json --recursive ./
      - name: 'Generate OSV Scanner report'
        uses: google/osv-scanner-action/osv-reporter-action@v2.1.0
        continue-on-error: true
        with:
          scan-args: |-
            --output=osv-scanner-results.sarif
            --new=results.json
            --gh-annotations=true
            --fail-on-vuln=true
            --all-vulns
      - name: 'Upload OSV Scanner results'
        uses: actions/upload-artifact@v4
        with:
          name: osv-scanner-results.sarif
          path: osv-scanner-results.sarif
      - name: 'Upload SARIF to GitHub Security'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: osv-scanner-results.sarif
