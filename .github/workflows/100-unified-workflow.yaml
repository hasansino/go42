name: unified-workflow

# Unified workflow - linting, testing, and security scanning.
# This workflow is designed for development and testing stages.
#
# Actions are executed by `runners` that are provided by GitHub.
# They are not free and billed per minute, although 2000 minutes per month are included in the free tier.
# @note macos runners are 10x more expensive than Linux runners.
# @note arm build are much slower than x86_64.
#
# Running this workflow too often can ramp-up actions costs significantly.
# One way to mitigate this, is to use a self-hosted runners.
# @see https://docs.github.com/en/actions/hosting-your-own-runners
#
# @note `with` arguments are repeated because `with` does not support context
# @see https://github.com/orgs/community/discussions/25246

on:
  workflow_dispatch:
  # push or merge to master
#  push:
#    branches: [ master ]
  # pull request targeting master branch created or updated
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write
  security-events: write
  pull-requests: write
  issues: write

jobs:
  # Stage 1: Linting
  git-lint:
    # Prevent dependabot from starting this workflow.
    if: github.event_name == 'workflow_dispatch' || github.actor != 'dependabot[bot]'
    uses: ./.github/workflows/110-git-lint.yaml
    with:
      runs_on: ubuntu-latest
      continue_on_error: false
  golangci-lint:
    # Prevent dependabot from starting this workflow.
    if: github.event_name == 'workflow_dispatch' || github.actor != 'dependabot[bot]'
    uses: ./.github/workflows/110-golangci-lint.yaml
    with:
      runs_on: ubuntu-latest
      continue_on_error: true
  docker-lint:
    # Prevent dependabot from starting this workflow.
    if: github.event_name == 'workflow_dispatch' || github.actor != 'dependabot[bot]'
    uses: ./.github/workflows/110-docker-lint.yaml
    with:
      runs_on: ubuntu-latest
      continue_on_error: true
  proto-lint:
    # Prevent dependabot from starting this workflow.
    if: github.event_name == 'workflow_dispatch' || github.actor != 'dependabot[bot]'
    uses: ./.github/workflows/110-proto-lint.yaml
    with:
      runs_on: ubuntu-latest
      continue_on_error: true
  openapi-lint:
    # Prevent dependabot from starting this workflow.
    if: github.event_name == 'workflow_dispatch' || github.actor != 'dependabot[bot]'
    uses: ./.github/workflows/110-openapi-lint.yaml
    with:
      runs_on: ubuntu-latest
      continue_on_error: true
  # Stage 2: Unit tests
  unit-tests:
    uses: ./.github/workflows/120-unit-tests.yaml
    needs: [ git-lint, golangci-lint, docker-lint, proto-lint, openapi-lint ]
    with:
      runs_on: ubuntu-latest
      continue_on_error: true
  # Stage 3: Vulnerability Scanning
  security:
    uses: ./.github/workflows/130-security.yaml
    needs: [ unit-tests ]
    with:
      runs_on: ubuntu-latest
      continue_on_error: true
  # Stage 4: Build
  docker-build:
    uses: ./.github/workflows/140-docker-build.yaml
    needs: [ security ]
    with:
      runs_on: ubuntu-latest
      continue_on_error: false
      service_name: "go42"
      image_tag: >-
        ${{
          github.event_name == 'pull_request' && github.head_ref || github.ref_name
        }}-${{ github.run_id }}
      platforms: "linux/amd64"
      attestation: false
  docker-security:
    uses: ./.github/workflows/140-docker-security.yaml
    needs: [ docker-build ]
    with:
      runs_on: ubuntu-latest
      continue_on_error: true
      service_name: "go42"
      image_tag: >-
        ${{
          github.event_name == 'pull_request' && github.head_ref || github.ref_name
        }}-${{ github.run_id }}
  # Stage 5: Actions with running application
  integration-tests:
    uses: ./.github/workflows/150-integration-tests.yaml
    needs: [ docker-build ]
    with:
      runs_on: ubuntu-latest
      continue_on_error: true
      service_name: "go42"
      image_tag: >-
        ${{
          github.event_name == 'pull_request' && github.head_ref || github.ref_name
        }}-${{ github.run_id }}
  load-tests:
    uses: ./.github/workflows/150-load-tests.yaml
    needs: [ docker-build ]
    with:
      runs_on: ubuntu-latest
      continue_on_error: true
      service_name: "go42"
      image_tag: >-
        ${{
          github.event_name == 'pull_request' && github.head_ref || github.ref_name
        }}-${{ github.run_id }}
  zap-api-scan:
    uses: ./.github/workflows/150-zap-api-scan.yaml
    needs: [ docker-build ]
    with:
      runs_on: ubuntu-latest
      continue_on_error: true
      service_name: "go42"
      image_tag: >-
        ${{
          github.event_name == 'pull_request' && github.head_ref || github.ref_name
        }}-${{ github.run_id }}
  # Stage 6: Cleanup
  cleanup:
    uses: ./.github/workflows/160-cleanup.yaml
    needs: [ docker-security, integration-tests, load-tests, zap-api-scan ]
    with:
      runs_on: ubuntu-latest
      service_name: "go42"
      image_tag: >-
        ${{
          github.event_name == 'pull_request' && github.head_ref || github.ref_name
        }}-${{ github.run_id }}
