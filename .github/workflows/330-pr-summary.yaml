name: pr-summary

# Automatically generates or updates PR description when a PR is opened or synchronized
# Uses OpenAI API to generate meaningful summaries based on commit history

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  check-pr:
    name: Check PR
    runs-on: ubuntu-latest
    outputs:
      should_generate: ${{ steps.pr_check.outputs.should_generate }}
    steps:
      - name: Check PR details
        id: pr_check
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
        run: |
          echo "PR #${{ github.event.pull_request.number }} from ${{ github.event.pull_request.user.login }}"
          echo "Current body length: ${#PR_BODY}"
          
          # Skip if author is a bot
          if [[ "${{ github.event.pull_request.user.type }}" == "Bot" ]]; then
            echo "::notice::Skipping summary generation for bot PR"
            echo "should_generate=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          
          # Check if body is empty or just whitespace
          if [ -z "${PR_BODY// }" ]; then
            echo "PR body is empty, will generate summary"
            echo "should_generate=true" >> "$GITHUB_OUTPUT"
          else
            echo "::notice::PR already has a description, skipping summary generation"
            echo "should_generate=false" >> "$GITHUB_OUTPUT"
          fi
  
  generate-summary:
    name: Generate Summary
    needs: check-pr
    if: needs.check-pr.outputs.should_generate == 'true'
    uses: ./.github/workflows/generate-summary.yaml
    with:
      base_ref: ${{ github.event.pull_request.base.sha }}
      head_ref: ${{ github.event.pull_request.head.sha }}
      context_type: pr
      llm_model: gpt-4o-mini
      debug: false
    secrets:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  
  update-pr:
    name: Update PR Description
    runs-on: ubuntu-latest
    needs: generate-summary
    if: needs.generate-summary.outputs.summary != ''
    steps:
      - name: Update PR Description
        uses: actions/github-script@v7
        env:
          SUMMARY: ${{ needs.generate-summary.outputs.summary }}
          LLM_MODEL: gpt-4o-mini
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const summary = process.env.SUMMARY;
            
            if (!summary || summary.trim() === '') {
              console.log('No summary generated, skipping PR update');
              return;
            }
            
            // Build the PR body
            let body = summary;
            
            // Add metadata footer
            body += '\n\n---\n';
            body += `\n*Generated automatically by GitHub Actions using ${process.env.LLM_MODEL}*`;
            body += `\n*To regenerate, clear the PR description and push a new commit*`;
            
            try {
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                body: body
              });
              
              console.log(`Successfully updated PR #${context.issue.number} description`);
              
              // Add a comment to notify
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: 'ðŸ¤– I\'ve generated a summary for this PR based on the commit history. You can edit the description as needed.'
              });
            } catch (error) {
              console.error('Failed to update PR:', error);
              throw error;
            }