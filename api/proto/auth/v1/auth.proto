syntax = "proto3";

package auth.v1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/hasansino/go42/api/auth/v1";

message User {
  string uuid = 2;
  string email = 3;
  UserStatus status = 4;
  repeated string roles = 5;
  repeated string permissions = 6;
  bool is_system = 7;
  google.protobuf.Timestamp created_at = 8;
}

enum UserStatus {
  USER_STATUS_ACTIVE = 0;
  USER_STATUS_INACTIVE = 1;
}

message ListUsersRequest {
  int32 limit = 1;
  int32 offset = 2;
}

message ListUsersResponse {
  repeated User users = 1;
}

message GetUserByUUIDRequest {
  string uuid = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.len = 36
  ];
}

message GetUserByUUIDResponse {
  User user = 1;
}

message CreateUserRequest {
  string email = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.email = true
  ];
  string password = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 8,
    (buf.validate.field).string.max_len = 24
  ];
}

message CreateUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  string uuid = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.len = 36
  ];
  optional string email = 2 [(buf.validate.field).string.email = true];
  optional string password = 3 [
    (buf.validate.field).string.min_len = 8,
    (buf.validate.field).string.max_len = 24
  ];
}

message UpdateUserResponse {}

message DeleteUserRequest {
  string uuid = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.len = 36
  ];
}

message DeleteUserResponse {}

service AuthService {
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  rpc GetUserByUUID(GetUserByUUIDRequest) returns (GetUserByUUIDResponse);
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
}
