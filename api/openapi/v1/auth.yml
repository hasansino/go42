openapi: 3.1.0
info:
  title: 'auth'
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/api/v1'
    description: local
security: []
paths:
  /auth/signup:
    post:
      tags:
        - auth
      summary: Create a new user
      operationId: signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
        '409':
          description: User already exists
  /auth/login:
    post:
      tags:
        - auth
      summary: Login an existing user
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
        '400':
          description: Invalid request
        '403':
          description: User inactive
  /auth/refresh:
    post:
      tags:
        - auth
      summary: Refresh user token
      operationId: refresh
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
        '400':
          description: Invalid request
        '403':
          description: User inactive
  /auth/logout:
    post:
      tags:
        - auth
      summary: Invalidate user tokens
      operationId: logout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequest'
      responses:
        '200':
          description: Tokens invalidated successfully
        '400':
          description: Invalid request
  /users/me:
    get:
      tags:
        - users
      summary: Retrieve current user information
      operationId: users.me
      security:
        - jwt: [user:read_self]
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
# ---
components:
  securitySchemes:
    jwt:
      type: apiKey
      in: header
      name: Authorization
      description: "JWT token in Authorization header (format: Bearer <token>)"
  schemas:
    User:
      type: object
      properties:
        uuid:
          type: string
          default: ""
        email:
          type: string
          default: ""
        created_at:
          type: string
          default: ""
        roles:
          type: array
          items:
            type: string
        permissions:
          type: array
          items:
            type: string
    Tokens:
      type: object
      properties:
        access_token:
          type: string
          default: ""
        refresh_token:
          type: string
          default: ""
        expires_in:
          type: integer
          default: 0
    CreateUserRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          default: "user@example.com"
        password:
          type: string
          default: "1234567890"
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          default: "user@example.com"
        password:
          type: string
          default: "1234567890"
    RefreshRequest:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          default: ""
    LogoutRequest:
      type: object
      required:
        - token
      properties:
        access_token:
          type: string
          default: ""
        refresh_token:
          type: string
          default: ""
